# source:
# - https://evilmartians.com/chronicles/build-images-on-github-actions-with-docker-layer-caching
# - https://github.com/docker/build-push-action/blob/main/docs/advanced/share-image-jobs.md
# - https://betterprogramming.pub/sharing-cached-layer-between-docker-and-docker-compose-builds-c2e5f751cee4
# - https://github.com/crazy-max/ghaction-docker-buildx#leverage-buildx-cache
# - https://www.freecodecamp.org/news/where-are-docker-images-stored-docker-container-paths-explained/
# - https://testdriven.io/blog/faster-ci-builds-with-docker-cache/
# - https://about.gitlab.com/blog/2020/10/30/mitigating-the-impact-of-docker-hub-pull-requests-limits/
name: generic-container-image-build-and-test

on:
  workflow_call:
    inputs:
      image:
        description: 'Full name of container image to build, without tag'
        default: 'jotelha/dserver'
        required: false
        type: string
      service:
        description: 'Name of service in compose file'
        default: 'dserver'
        required: false
        type: string
      docker_file:
        description: 'Path to dockerfile within repository of calling workflow'
        default: './compose/production/dserver/Dockerfile'
        required: false
        type: string
      docker_context:
        description: 'Context for building docker image'
        default: '.'
        required: false
        type: string

jobs:

  build:

    runs-on: ubuntu-20.04
      
    steps:

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Docker meta
      id: docker_meta
      uses: crazy-max/ghaction-docker-meta@v5.5.1
      with:
        images: ${{ inputs.image }}
        tags: |
          type=raw,value=sha-${{ github.sha }}

    - name: Set up docker buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache docker layers
      uses: actions/cache@v4.0.2
      env:
        cache-name: cache-docker-layers
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ env.cache-name }}
        restore-keys: |
          ${{ runner.os }}-buildx-${{ env.cache-name }}

    - name: Build
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.docker_context }}
        file: ${{ inputs.docker_file }}
        platforms: linux/amd64
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
        outputs: type=docker, dest=/tmp/image.tar
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
        # This ugly bit is necessary if you don't want your cache to grow forever
        # till it hits GitHub's limit of 5GB.
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: image
        path: /tmp/image.tar

  test:

    needs: build
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8']
        dserver-container-composition-version: ['main']
        dtool-lookup-api-version: ['main']

    steps:
    
    # deactivated docker buildx here due to
    # * https://github.com/docker/compose/issues/8494
    # * https://github.com/docker/compose/issues/8590 
    # otherwise, the line
    #    docker-compose -p dserver-container-composition up -d
    # below will fail with
    #   [2394] Failed to execute script docker-compose
    #   Traceback (most recent call last):
    #     File "docker-compose", line 3, in <module>
    #     File "compose/cli/main.py", line 81, in main
    #     File "compose/cli/main.py", line 203, in perform_command
    #     File "compose/metrics/decorator.py", line 18, in wrapper
    #     File "compose/cli/main.py", line 1186, in up
    #     File "compose/cli/main.py", line 1182, in up
    #     File "compose/project.py", line 664, in up
    #     File "compose/service.py", line 364, in ensure_image_exists
    #     File "compose/service.py", line 1133, in build
    #     File "compose/service.py", line 1950, in build
    #   IndexError: list index out of range
    #   Error: Process completed with exit code 255.
    #
    # - name: Set up docker buildx
    #   uses: docker/setup-buildx-action@v3
    #   with:
    #     install: true

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: image
        path: /tmp

    - name: Load current image
      run: |
        # the following line allows testing locally with act (https://github.com/nektos/act),
        # i.e. by running
        #   act -W .github/workflows/test.yml --bind
        # from within this repository's root directory (see README for more information).
        sudo chown runner:docker /var/run/docker.sock
        # see https://github.com/nektos/act/issues/724#issuecomment-855390956

        # show docker info
        docker info

        docker load --input /tmp/image.tar
        docker image ls -a

    - name: Git checkout dserver-container-composition ${{ matrix.dserver-container-composition-version }}
      uses: actions/checkout@v4
      with:
        repository: livMatS/dserver-container-composition
        ref: ${{ matrix.dserver-container-composition-version }}
        path: dserver-container-composition

    - name: Git checkout dtool-lookup-api ${{ matrix.dtool-lookup-api-version }}
      uses: actions/checkout@v4
      with:
        repository: livMatS/dtool-lookup-api
        ref: ${{ matrix.dtool-lookup-api-version }}
        path: dtool-lookup-api

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Modify pinned version for ${{ inputs.image }}, provide dserver ${{ matrix.dserver-version }} and run tests
      working-directory: dserver-container-composition
      run: |
        # override composition defaults to use local image
        # use commit-specific github sha tag to identify image built above correctly
        echo '{"version":"2","services":{"${{ inputs.service }}":{"image":"${{ inputs.image }}:sha-${{ github.sha }}"}}}' | yq e . -o yaml -P - >  docker-compose.current_build.versions.yml

        echo "generated docker-compose.current_build.versions.yml"
        cat docker-compose.current_build.versions.yml

        source env.testing.rc
        DOCKER_COMPOSE_OPTS="${DOCKER_COMPOSE_OPTS} -f docker-compose.current_build.versions.yml"

        echo "docker-compose config"
        docker compose ${DOCKER_COMPOSE_OPTS} config

        # don't fail if some image is not publically available
        docker compose ${DOCKER_COMPOSE_OPTS} pull || true

        echo "docker image ls"
        docker image ls

        echo "generate jwt key"
        cd keys
        bash generate_jwt_key.sh
        cd ..

        echo "docker compose up -d"
        docker compose ${DOCKER_COMPOSE_OPTS} up -d 

        echo "docker container ls --all"
        docker container ls --all

        echo "docker volume ls"
        docker volume ls
        
        echo "docker images"
        docker compose ${DOCKER_COMPOSE_OPTS} images

        echo "dserver log"
        docker compose ${DOCKER_COMPOSE_OPTS} logs dserver
        
        echo "dserver client log"
        docker compose ${DOCKER_COMPOSE_OPTS} logs dserver_client

        echo "s3server log"
        docker compose  ${DOCKER_COMPOSE_OPTS} logs s3server

        echo "s3server-init log"
        docker compose  ${DOCKER_COMPOSE_OPTS} logs s3server_init

        echo "testing-env-init"
        docker compose  ${DOCKER_COMPOSE_OPTS} logs testing_env_init

        echo "explicitly re-evoke dataset indexing"
        docker compose ${DOCKER_COMPOSE_OPTS} exec -T dserver /refresh_index

        echo "dtool query '{}'"
        docker compose ${DOCKER_COMPOSE_OPTS} run dserver_client query '{}'

    - name: Install basic testing requirements
      working-directory: dtool-lookup-api
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade setuptools wheel setuptools-scm[toml] importlib-metadata
        pip install pytest pytest-cov pytest-ordering

    - name: Install dtool-lookup-api
      working-directory: dtool-lookup-api
      run: |
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install ".[testing]"
        echo "pip list"
        pip list

    - name: Run dtool-lookup-api tests
      working-directory: dtool-lookup-api
      run: pytest
